<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use App\Task;
use App\Project;
use Carbon\Carbon;
use Validator;


class TaskController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
    }

    public function validator(array $data)
    {
        return Validator::make($data, [
            'author_id' => 'required',
            'title' => 'required',
            'description' => 'required',
        ]);
    }

    public function create($id)
    {
        $project = Project::find($id);
        $tasks = Task::where('project_id', '=', $id)->take(3)->get();
        return view('task.create')->with([
            'tasks' => $tasks,
            'project' => $project,
        ]);
    }

    public function store($id, Request $request)
    {
        $validator = $this->validator($request->all());
        if (!$validator->fails()) {
            $task = Task::create([
                'project_id' => $id,
                'author_id' => $request->input('author_id'),
                'title' => $request->input('title'),
                'description' => $request->input('description'),
                'beginning_date' => $request->input('dateD'),
                'status' => 'In progress',
            ]);
            if($request->input('dateF') != ""){
                if($request->input('dateF') >= $request->input('dateD')){
                    $task->ending_date = $request->input('dateF');
                    $task->save();
                }
            }
            return redirect('project/'.$id.'/tasks/'. $task->id);
        }
        return redirect()->back()->withErrors($validator);
    }

    public function index($id)
    {
        $project = Project::find($id);
        $tasks = Task::where('project_id', '=', $id)->get();
        return view('task.index')->with([
            'project' => $project,
            'tasks' => $tasks
        ]);
    }

    public function edit($id, $task_id)
    {
        $project= Project::find($id);
        $o_tasks = Task::where('project_id', '=', $id)->get();
        $task = Task::find($task_id);
        return view('task.edit')->with([
            'project' => $project,
            'task' => $task,
            'o_tasks' => $o_tasks,

        ]);
    }
    public function update($id, $task_id, Request $data){
        $task = Task::find($task_id);
        $task->update([
            'project_id' => $id,
            'author_id' => $data->input('author_id'),
            'title' => $data->input('title'),
            'description' => $data->input('description'),
            'beginning_date' => $data->input('dateD'),
            'status' => 'In progress',
        ]);
        $task->save();

        if($data->input('dateF') >= $data->input('dateD')){
            $task->ending_date = $data->input('dateF');
            $task->save();
        }
        return redirect('project/'.$id.'/tasks/'. $task->id);
    }
    public function delete($id, $task_id)
    {
        $task = Task::find($task_id);
        $task->delete();

        return redirect('project/'.$id.'/tasks');
    }

    public function show($id,$task_id)
    {
        $project = Project::find($id);
        $task = Task::find($task_id);
        $o_tasks = Task::where('project_id', '=', $id)->take(3)->get();
        return view('task.view')->with([
            'project' => $project,
            'task' => $task,
            'o_tasks' => $o_tasks,
        ]);
    }
}